{"version":3,"file":"src_app_git-accounts-create_git-accounts-create_module_ts.js","mappings":"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","sources":["./src/app/git-accounts-create/git-accounts-create.component.ts","./src/app/git-accounts-create/git-accounts-create.component.html","./src/app/git-accounts-create/git-accounts-create.module.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {HelperService} from \"../helper.service\";\nimport {ApiResponse, ApiService} from \"../api.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-git-accounts-create',\n  templateUrl: './git-accounts-create.component.html',\n  styleUrls: ['./git-accounts-create.component.scss']\n})\nexport class GitAccountsCreateComponent implements OnInit {\n  constructor(\n    private helper: HelperService,\n    private apiService: ApiService,\n    private fb: FormBuilder,\n  ) {\n    this.form = this.fb.group({\n      'provider_id': ['', [Validators.required]],\n      'client_id': ['cead9661bec124b3afc6', [Validators.required]],\n      'client_secret': ['d3ba872e5c069fc91e3b7c7976492d5f7c94a81e', [Validators.required]],\n    });\n  }\n\n  form: FormGroup;\n\n  ngOnInit() {\n    this.getProviders();\n    this.helper\n      .setPage('git-accounts');\n  }\n\n\n  connecting: boolean = false;\n\n  connect() {\n    this.connecting = true;\n    // save first then go to the connect page.\n    this.apiService.post('oauth/save-oauth-app',\n      this.form.value)\n      .subscribe({\n        next: (res: ApiResponse) => {\n          this.connecting = false;\n          console.log(res)\n          if (res.status) {\n            let user = this.helper.getUser();\n\n            window.open(res.data.public_domain + 'api/connect?me=' + this.helper.encode(res.data.app_id) + '&token=' + user.token, '_empty_');\n          } else {\n            this.helper.alertError(res);\n          }\n        },\n        error: err => {\n          this.connecting = false;\n          this.helper.alertError(err);\n        }\n      });\n  }\n\n  selectedProvider?: GitProviderObject;\n\n  providerChanged() {\n    console.log('what');\n    console.log(this.form.value);\n    let providerId = this.form?.get('provider_id')?.value;\n    for (let p of this.providers) {\n      console.log(providerId);\n      if (p.provider_id == providerId) {\n        this.labels['label1'] = p.provider_param_1_name;\n        this.labels['label2'] = p.provider_param_2_name;\n        console.log(p)\n        this.selectedProvider = p;\n      }\n    }\n  }\n\n  providers: GitProviderObject[] = [];\n  gettingProviders: boolean = false;\n  labels: any = {};\n\n  getProviders() {\n    this.gettingProviders = true;\n    this.apiService.post('oauth/all-providers', {})\n      .subscribe({\n        next: (res: ApiResponse) => {\n          console.log(res);\n          if (res.status) {\n            this.providers = res.data.providers;\n          } else {\n            this.helper.alert({\n              message: res.message,\n              exception: res.exception,\n              type: 'Error',\n            });\n          }\n        },\n        error: err => {\n          this.helper.alert({\n            message: err,\n            type: 'Error',\n          });\n        }\n      })\n  }\n\n}\n\nexport interface GitProviderObject {\n  provider_id: number;\n  provider_key: string;\n  provider_name: string;\n  provider_param_1_name: string;\n  provider_param_2_name: string;\n}\n","<div style=\"height: 15px\"></div>\n<div class=\"page\">\n  <!--  <mat-card>-->\n  <!--    <mat-card-content>-->\n  <h2 style=\"\">\n    Connect your git account\n  </h2>\n  <p>\n    <mat-icon>info</mat-icon> Github uses your create OAuth Apps to login to the application, you can create your app -tell how-\n  </p>\n  <div class=\"p-b-10\"></div>\n\n  <h3>\n    Select your OAuth Application\n  </h3>\n  <div>\n    <p>\n      Create an OAuth application in your account, this application will be used to login in Accounts.\n    </p>\n    <form [formGroup]=\"form\">\n      <mat-form-field appearance=\"outline\" class=\"mr2\">\n        <mat-label>Git provider</mat-label>\n        <mat-select (selectionChange)=\"providerChanged()\" formControlName=\"provider_id\">\n          <mat-option [value]=\"p.provider_id\" *ngFor=\"let p of providers\">{{p.provider_name}}</mat-option>\n        </mat-select>\n        <!--        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>-->\n        <!--        <mat-hint>Hint</mat-hint>-->\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" class=\"mr2\" *ngIf=\"this.labels['label1']\">\n        <mat-label>{{labels?.label1 || 'Client ID'}}</mat-label>\n        <input matInput formControlName=\"client_id\">\n        <!--        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>-->\n        <!--        <mat-hint>Hint</mat-hint>-->\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\" *ngIf=\"this.labels['label1']\">\n        <mat-label>{{labels?.label2 || 'Client Secret'}}</mat-label>\n        <input matInput formControlName=\"client_secret\">\n<!--        <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>-->\n<!--        <mat-hint>Hint</mat-hint>-->\n      </mat-form-field>\n    </form>\n  </div>\n  <div *ngIf=\"form.valid\">\n      <h3>\n          Login to {{selectedProvider?.provider_name || '-select your provider-'}}\n      </h3>\n      <p>\n          Login with the account whose repository you want to deploy\n      </p>\n      <button type=\"button\"\n              style=\"height: 69px;\n    padding: 0 84px;\n    border-radius: 50px;\"\n              mat-stroked-button\n              (click)=\"connect()\"\n              [disabled]=\"connecting\"\n              color=\"primary\"\n      >Login to {{selectedProvider?.provider_name}}</button>\n      <!--    </mat-card-content>-->\n      <!--  </mat-card>-->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GitAccountsCreateComponent } from './git-accounts-create.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {ProfileComponent} from \"../profile/profile.component\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n\n\n\n\nlet routes: Routes = [\n  {\n    path: 'git-accounts/create',\n    component: GitAccountsCreateComponent,\n  }\n]\n\n@NgModule({\n  declarations: [\n    GitAccountsCreateComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n  ]\n})\nexport class GitAccountsCreateModule { }\n"],"names":["Validators","i0","GitAccountsCreateComponent","constructor","helper","apiService","fb","form","group","required","ngOnInit","getProviders","setPage","connect","connecting","post","value","subscribe","next","res","console","log","status","user","getUser","window","open","data","public_domain","encode","app_id","token","alertError","error","err","providerChanged","providerId","get","p","providers","provider_id","labels","provider_param_1_name","provider_param_2_name","selectedProvider","gettingProviders","alert","message","exception","type","selectors","decls","vars","consts","template","ctx","CommonModule","RouterModule","MatIconModule","MatButtonModule","MatCardModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatSelectModule","routes","path","component","GitAccountsCreateModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}