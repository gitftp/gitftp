{"version":3,"file":"src_app_git-accounts_git-accounts_module_ts.js","mappings":"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","sources":["./src/app/git-accounts/git-accounts.component.html","./src/app/git-accounts/git-accounts.component.ts","./src/app/git-accounts/git-accounts.module.ts"],"sourcesContent":["<div class=\"page\">\n  <div class=\"header\">\n\n  <h2>Git accounts</h2>\n  <div class=\"btns\">\n    <button mat-stroked-button\n            color=\"primary\"\n            routerLink=\"/git-accounts/create\">Create\n    </button>\n  </div>\n  </div>\n</div>\n<div class=\"table2\">\n  <table mat-table\n         [dataSource]=\"dataSource\"\n         class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell\n          *matHeaderCellDef> Actions\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        <button type=\"button\" mat-button (click)=\"remove(element)\"\n                color=\"primary\">\n          Remove\n        </button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"username\">\n      <th mat-header-cell\n          *matHeaderCellDef>Identification\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        <span style=\"color: #999;\">Logged in as</span> @{{element.git_username}}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"provider\">\n      <th mat-header-cell\n          *matHeaderCellDef>Provider\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        {{element.provider_name}}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"expires\">\n      <th mat-header-cell\n          *matHeaderCellDef> Token expires\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\"> {{element.expires}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"token\">\n      <th mat-header-cell\n          *matHeaderCellDef> Token\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\"> {{element.access_token}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"client_id\">\n      <th mat-header-cell\n          *matHeaderCellDef> OAuth client\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\"> {{element.client_id}} </td>\n    </ng-container>\n\n\n    <tr mat-header-row\n        *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row\n        *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n\n\n\n\n\n\n\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {ApiResponse, ApiService} from \"../api.service\";\nimport {HelperService} from \"../helper.service\";\nimport {GitAccountsCreateComponent} from \"../git-accounts-create/git-accounts-create.component\";\n\n@Component({\n  selector: 'app-git-accounts',\n  templateUrl: './git-accounts.component.html',\n  styleUrls: ['./git-accounts.component.scss']\n})\nexport class GitAccountsComponent implements OnInit {\n  displayedColumns: string[] = [\n    'actions',\n    'provider',\n    'username',\n    'token',\n    'expires',\n    'client_id',\n  ];\n  dataSource: GitAccountsObject[] = [];\n\n  constructor(\n    private apiService: ApiService,\n    private helper: HelperService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.load();\n    this.helper\n      .setPage('git-accounts');\n  }\n\n  remove(el: GitAccountsObject) {\n    let dialog = this.helper.alert({\n      type: 'warning',\n      message: 'Do you want to delete the oauth app',\n      buttons: ['Close', 'Delete'],\n    });\n\n    dialog.afterClosed().subscribe({\n      next: (btn: any) => {\n        if(btn == 'Delete'){\n          this._remove(el);\n        }\n      },\n      error: () => {\n\n      }\n    })\n  }\n\n  _remove(el: GitAccountsObject){\n    this.apiService.post('oauth/delete-git-accounts', el)\n      .subscribe({\n        next: () => {\n          this.load();\n        },\n        error: () => {\n\n        }\n      })\n  }\n\n\n  loading: boolean = false;\n\n  load() {\n\n    this.loading = true;\n    this.apiService.post('oauth/git-accounts', {})\n      .subscribe({\n        next: (res: ApiResponse) => {\n          this.loading = false;\n          if (res.status) {\n            console.log(res);\n            this.dataSource = res.data.accounts;\n          } else {\n            this.helper.alertError(res);\n          }\n        }, error: error => {\n          this.loading = false;\n          this.helper.alertError(error);\n        }\n      })\n\n  }\n}\n\n\nexport interface GitAccountsObject {\n  git_username: string;\n  expires?: any;\n  client_id: string;\n  access_token: string;\n  provider_name: string;\n  provider_key: string;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GitAccountsComponent } from './git-accounts.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatTableModule} from \"@angular/material/table\";\n\n\n\n\nlet routes: Routes = [\n  {\n    path: 'git-accounts',\n    component: GitAccountsComponent,\n  }\n]\n@NgModule({\n  declarations: [\n    GitAccountsComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n  ]\n})\nexport class GitAccountsModule { }\n"],"names":["i0","GitAccountsComponent","constructor","apiService","helper","ngOnInit","load","setPage","remove","el","dialog","alert","type","message","buttons","afterClosed","subscribe","next","btn","_remove","error","post","loading","res","status","console","log","dataSource","data","accounts","alertError","selectors","decls","vars","consts","template","CommonModule","RouterModule","MatButtonModule","MatIconModule","MatTableModule","routes","path","component","GitAccountsModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}