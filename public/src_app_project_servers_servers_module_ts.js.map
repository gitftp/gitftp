{"version":3,"file":"src_app_project_servers_servers_module_ts.js","mappings":"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","sources":["./src/app/project/servers/servers.component.html","./src/app/project/servers/servers.component.ts","./src/app/project/servers/servers.module.ts"],"sourcesContent":["<div class=\"page\">\n  <div class=\"header\">\n\n    <h2>Servers</h2>\n    <div class=\"btns\">\n      <!--      <button mat-stroked-button-->\n      <!--              color=\"primary\"-->\n      <!--              routerLink=\"/git-accounts/create\">Create-->\n      <!--      </button>-->\n      <button mat-stroked-button\n              color=\"primary\"\n              type=\"button\"\n              [routerLink]=\"'/project/'+ encode(projectId) + '/server/add'\">\n        add server\n      </button>\n    </div>\n  </div>\n</div>\n<div style=\"padding: 30px\"\n     *ngIf=\"gettingServers\">\n  <mat-spinner diameter=\"50\"></mat-spinner>\n</div>\n<div class=\"table2\"\n     *ngIf=\"servers.length\">\n  <table mat-table\n         [dataSource]=\"servers\"\n         class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"server_name\">\n      <th mat-header-cell\n          *matHeaderCellDef>Name\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        {{element.server_name}}\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"branch\">\n      <th mat-header-cell\n          *matHeaderCellDef>Branch\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        <ng-icon style=\"\n    font-size: 21px;\n    vertical-align: middle;\"\n                 name=\"ionGitBranch\"></ng-icon>\n        {{element.branch}}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"r\">\n      <th mat-header-cell\n          *matHeaderCellDef>\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        <mat-icon>arrow_right_alt</mat-icon>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n      <th mat-header-cell\n          *matHeaderCellDef>type\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        <!--        <mat-icon style=\"vertical-align: middle;-->\n        <!--    margin-top: -4px;\">dns-->\n        <!--        </mat-icon>-->\n        <span class=\"label\">\n        {{element.type | uppercase}}\n        </span>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"host\">\n      <th mat-header-cell\n          *matHeaderCellDef>\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        <span [matTooltip]=\"element.path\">\n          {{element.host}}\n        </span>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"auto_deploy\">\n      <th mat-header-cell\n          *matHeaderCellDef>\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        {{element.auto_deploy == 0 ? '' : 'Auto deploy active'}}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"revision\">\n      <th mat-header-cell\n          *matHeaderCellDef>Revision\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        {{element.revision || ''}}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell\n          *matHeaderCellDef>Action\n      </th>\n      <td mat-cell\n          *matCellDef=\"let element\">\n        <button type=\"button\"\n                mat-button\n                style=\"margin-right: 7px;\"\n                color=\"primary\"\n                [routerLink]=\"'/project/' + encode(projectId) + '/server/setup/' + encode(element.server_id)\">View setup\n        </button>\n        <button type=\"button\"\n                mat-button\n                [routerLink]=\"'/project/' + encode(projectId) + '/deploy/' + encode(element.server_id)\"\n                color=\"primary\"\n        >\n\n          Deploy\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row\n        *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row\n        *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n</div>\n","import {Component} from '@angular/core';\nimport {ApiResponse, ApiService} from \"../../api.service\";\nimport {AppEvent, HelperService} from \"../../helper.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ProjectObject} from \"../project.component\";\n\n@Component({\n  selector: 'app-servers',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.scss']\n})\nexport class ServersComponent {\n  constructor(\n    private apiService: ApiService,\n    private helper: HelperService,\n    private activatedRoute: ActivatedRoute,\n  ) {\n\n  }\n\n  encode(a: string) {\n    return this.helper.encode(a);\n  }\n\n  set setChildData(a: any) {\n    this.projectId = a.projectId;\n    this.project = a.project;\n    this.helper.setPage('project' + this.projectId + 'servers');\n\n    this.getServers();\n  };\n\n  projectId: string = '';\n  project?: ProjectObject;\n\n  ngOnInit() {\n    // this.helper.appEvents.subscribe((e: AppEvent) => {\n    //   if (e.name == 'projectLoad') {\n    //     this.project = e.data.project;\n    //     this.projectId = e.data.projectId;\n    //     console.log('load servers');\n    //   }\n    // });\n  }\n\n  displayedColumns: string[] = [\n    'action',\n    'server_name',\n    'branch',\n    'r',\n    'type',\n    'host',\n    'auto_deploy',\n    'revision',\n  ];\n\n  servers: ServerObject[] = [];\n  gettingServers: boolean = false;\n\n\n  getServers() {\n    this.gettingServers = true;\n    this.apiService.post('servers/list', {\n      project_id: this.projectId\n    }).subscribe({\n      next: (res: ApiResponse) => {\n        // console.log(res);\n        this.gettingServers = false;\n        if (res.status) {\n          this.servers = res.data.servers;\n        } else {\n          this.helper.alertError(res);\n        }\n      },\n      error: err => {\n        this.gettingServers = false;\n        this.helper.alertError(err);\n      }\n    })\n  }\n}\n\n\nexport interface ServerObject {\n  server_id: number;\n  server_name: string;\n  project_id: number;\n  branch: string;\n  type: number;\n  secure: number;\n  host: string;\n  port: string;\n  username: string;\n  password: string;\n  path: string;\n  key_id: number;\n  created_by: number;\n  auto_deploy: number;\n  created_at: string;\n  updated_at?: any;\n  revision: string;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ServersComponent} from './servers.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SettingsComponent} from \"../settings/settings.component\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport { BrowseServerComponent } from './browse-server/browse-server.component';\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {NgIconsModule} from \"@ng-icons/core\";\nimport {ionGitBranch, ionGitBranchOutline} from \"@ng-icons/ionicons\";\n\n\nlet routes: Routes = [\n  {\n    path: '',\n    component: ServersComponent,\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    ServersComponent,\n    BrowseServerComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatCardModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTableModule,\n    MatTooltipModule,\n    NgIconsModule.withIcons({\n      ionGitBranch,\n      ionGitBranchOutline,\n    }),\n  ]\n})\nexport class ServersModule {\n}\n"],"names":["i0","ServersComponent","constructor","apiService","helper","activatedRoute","encode","a","setChildData","projectId","project","setPage","getServers","ngOnInit","gettingServers","post","project_id","subscribe","next","res","status","servers","data","alertError","error","err","selectors","decls","vars","consts","template","CommonModule","RouterModule","MatCardModule","MatButtonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatOptionModule","MatSelectModule","MatProgressSpinnerModule","MatDialogModule","MatTableModule","BrowseServerComponent","MatTooltipModule","NgIconsModule","ionGitBranch","ionGitBranchOutline","routes","path","component","ServersModule","forChild","withIcons","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}