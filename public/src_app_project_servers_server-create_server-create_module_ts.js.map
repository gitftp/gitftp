{"version":3,"file":"src_app_project_servers_server-create_server-create_module_ts.js","mappings":"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","sources":["./src/app/project/servers/server-create/server-create.component.ts","./src/app/project/servers/server-create/server-create.component.html","./src/app/project/servers/server-create/server-create.module.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {ProjectObject} from \"../../project.component\";\nimport {ApiResponse, ApiService} from \"../../../api.service\";\nimport {HelperService} from \"../../../helper.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {BrowseServerComponent} from \"../browse-server/browse-server.component\";\n\n@Component({\n  selector: 'app-server-create',\n  templateUrl: './server-create.component.html',\n  styleUrls: ['./server-create.component.scss',]\n})\nexport class ServerCreateComponent {\n  constructor(\n    private apiService: ApiService,\n    private helper: HelperService,\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private router: Router,\n  ) {\n\n    this.form = this.fb.group({\n      'server_name': ['', [Validators.required]],\n      'branch': ['', [Validators.required]],\n      'type': ['local', [Validators.required]],\n      'secure': ['', []],\n      'host': ['', []],\n      'port': ['', []],\n      'username': ['', []],\n      'password': ['', []],\n      'path': ['', []],\n      'key_id': ['', []],\n      'auto_deploy': ['', []],\n      'revision': ['', []],\n    })\n  }\n\n  form: FormGroup;\n\n  encode(a: string) {\n    return this.helper.encode(a);\n  }\n\n  set setChildData(a: any) {\n    this.projectId = a.projectId;\n    this.project = a.project;\n    // this.helper.setPage('project' + this.projectId);\n    this.helper.setPage('project' + this.projectId + 'servers');\n    this.getBranches();\n    this.activatedRoute.params.subscribe((params: any) => {\n      // console.log(params);\n      this.serverId = this.helper.decode(params.id);\n      this.load();\n    });\n  };\n\n  projectId: string = '';\n  serverId: string = '';\n  project?: ProjectObject;\n\n  loading: boolean = false;\n\n  load() {\n    this.loading = true;\n    this.apiService.post('servers/list', {\n      server_id: this.serverId,\n      project_id: this.projectId,\n    }).subscribe({\n      next: (res: ApiResponse) => {\n        console.log(res);\n        if (res.status) {\n          this.form.patchValue(res.data.servers[0]);\n        } else {\n          this.helper.alertError(res);\n        }\n      }, error: err => {\n        this.helper.alertError(err);\n      },\n    })\n  }\n\n  saving: boolean = false;\n\n  save() {\n    this.saving = true;\n    this.apiService.post('server/save', {\n      project_id: this.projectId,\n      server_id: this.serverId,\n      payload: this.form.value,\n    })\n      .subscribe({\n        next: (res: ApiResponse) => {\n          this.saving = false;\n          console.log(res)\n          if (res.status) {\n            // this.helper.alert('Server')\n            this.router.navigate([\n              'project',\n              this.helper.encode(this.projectId),\n              'servers',\n            ]);\n          } else {\n            this.helper.alertError(res);\n          }\n        }, error: err => {\n          this.saving = false;\n          this.helper.alertError(err);\n        }\n      })\n  }\n\n  ngOnInit() {\n  }\n\n  branches: string[] = [];\n  // branches: Branch\n  gettingBranches: boolean = false;\n\n  getBranches() {\n    this.gettingBranches = true;\n    console.log(this.projectId);\n    this.apiService.post('repo/git/branches', {\n      project_id: this.projectId,\n    })\n      .subscribe({\n        next: (res: ApiResponse) => {\n          this.gettingBranches = false;\n          console.log(res);\n          if (res.status) {\n            this.branches = res.data.branches;\n          } else {\n            this.helper.alertError(res);\n          }\n        },\n        error: err => {\n          this.gettingBranches = false;\n          this.helper.alertError(err);\n        }\n      })\n  }\n\n  browseDir() {\n    this.dialog.open(BrowseServerComponent, {\n      data: {\n        server: <ServerObject>this.form.value,\n      }\n    })\n      .afterClosed().subscribe({\n      next: r => {\n        if (r) {\n          this.form.get('path')?.setValue(r);\n        }\n      }\n    })\n  }\n}\n\nexport interface ServerObject {\n  server_name: string,\n  branch: string,\n  type: string,\n  secure: string,\n  host: string,\n  port: string,\n  username: string,\n  password: string,\n  path: string,\n  key_id: string,\n  auto_deploy: string,\n  revision: string,\n}\n","<div class=\"page bootstrap-wrapper\">\n\n  <div class=\"header\"\n       style=\"margin-bottom: 0\">\n    <h2>\n      {{serverId ? 'Update': 'Create'}} server</h2>\n    <div class=\"btns\">\n\n    </div>\n  </div>\n\n  <form [formGroup]=\"form\" (submit)=\"save()\">\n    <div style=\"margin-top: 10px\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <h3>\n              <span>Environment details</span>\n            </h3>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-3\">\n            <mat-form-field appearance=\"outline\"\n                            class=\"mr2\">\n              <mat-label>Server name</mat-label>\n              <input matInput\n                     formControlName=\"server_name\">\n            </mat-form-field>\n          </div>\n          <div class=\"col-3\">\n            <mat-form-field appearance=\"outline\"\n                            class=\"mr2\">\n              <mat-label>Branch to deploy</mat-label>\n              <mat-select formControlName=\"branch\"\n                          [disabled]=\"gettingBranches\">\n                <mat-option [value]=\"b\"\n                            *ngFor=\"let b of branches\">{{b}}</mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-4\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Current revision</mat-label>\n              <input matInput\n                     placeholder=\"SHA hash\"\n                     formControlName=\"revision\">\n              <mat-hint>Leave empty if fresh upload</mat-hint>\n            </mat-form-field>\n          </div>\n          <div class=\"col-3\">\n            <mat-checkbox style=\"margin-top: -4px;\"\n                          formControlName=\"auto_deploy\">\n              Continuous deployment <br>\n              <mat-hint>Deploy will be triggered when commits are pushed to repository</mat-hint>\n\n            </mat-checkbox>\n            <div>\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <h3 style=\"margin-top: 30px;\">\n              <span>Server connection</span>\n            </h3>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div style=\"margin-bottom: 10px;\">\n              <mat-radio-group aria-label=\"Select an option\"\n                               formControlName=\"type\">\n                <mat-radio-button style=\"margin-right: 20px;\"\n                                  value=\"ftp\">FTP\n                </mat-radio-button>\n                <mat-radio-button style=\"margin-right: 20px;\"\n                                  value=\"sftp\">SFTP\n                </mat-radio-button>\n                <mat-radio-button style=\"margin-right: 20px;\"\n                                  value=\"local\">Local\n                </mat-radio-button>\n              </mat-radio-group>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n\n          <div class=\"col-7\">\n\n            <div class=\"row\">\n              <div class=\"col-12\"\n                   *ngIf=\"form.get('type')?.value == 'ftp'\">\n                <mat-checkbox formControlName=\"secure\"\n                              style=\"margin-bottom: 15px;\">\n                  Use FTP over TLS (FTPS) (recommended)\n                </mat-checkbox>\n              </div>\n              <div class=\"col-6\"\n                   *ngIf=\"form.get('type')?.value == 'ftp' || form.get('type')?.value == 'sftp'\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Host</mat-label>\n                  <input matInput\n                         formControlName=\"host\">\n                </mat-form-field>\n              </div>\n              <div class=\"col-6\"\n                   *ngIf=\"form.get('type')?.value == 'ftp' || form.get('type')?.value == 'sftp'\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Port</mat-label>\n                  <input matInput\n                         formControlName=\"port\">\n                </mat-form-field>\n              </div>\n              <div class=\"col-6\"\n                   *ngIf=\"form.get('type')?.value == 'ftp' || form.get('type')?.value == 'sftp'\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Username</mat-label>\n                  <input matInput\n                         formControlName=\"username\">\n                </mat-form-field>\n              </div>\n              <div class=\"col-6\"\n                   *ngIf=\"form.get('type')?.value == 'ftp' || form.get('type')?.value == 'sftp'\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Password</mat-label>\n                  <input matInput\n                         formControlName=\"password\">\n                </mat-form-field>\n              </div>\n              <div class=\"col-12\"\n                   *ngIf=\"form.get('type')?.value == 'sftp'\">\n                <mat-slide-toggle style=\"margin-bottom: 20px;\"\n                                  formControlName=\"password\">Use public key for authentication\n                </mat-slide-toggle>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-6\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Deploy path</mat-label>\n              <input matInput\n                     placeholder=\"../path/to/htdocs/\"\n                     formControlName=\"path\">\n              <button matSuffix\n                      mat-icon-button\n                      type=\"button\"\n                      matTooltip=\"Browse server\"\n                      (click)=\"browseDir()\"\n                      aria-label=\"Clear\"\n                      style=\"margin-right: 5px;\">\n                <mat-icon>folder_open</mat-icon>\n              </button>\n            </mat-form-field>\n          </div>\n          <div class=\"col-12\">\n            <button type=\"submit\" mat-flat-button color=\"primary\">\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div style=\"height: 200px;\"></div>\n{{form.value | json}}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ServerCreateComponent} from './server-create.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {MatSliderModule} from \"@angular/material/slider\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\n\n\nlet routes: Routes = [\n  {\n    path: 'add',\n    component: ServerCreateComponent,\n  },\n  {\n    path: 'setup/:id',\n    component: ServerCreateComponent,\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    ServerCreateComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatCardModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatTooltipModule,\n    MatSlideToggleModule,\n  ]\n})\nexport class ServerCreateModule {\n}\n"],"names":["Validators","BrowseServerComponent","i0","ServerCreateComponent","constructor","apiService","helper","activatedRoute","fb","dialog","router","form","group","required","encode","a","setChildData","projectId","project","setPage","getBranches","params","subscribe","serverId","decode","id","load","loading","post","server_id","project_id","next","res","console","log","status","patchValue","data","servers","alertError","error","err","save","saving","payload","value","navigate","ngOnInit","gettingBranches","branches","browseDir","open","server","afterClosed","r","get","setValue","selectors","decls","vars","consts","template","ctx","CommonModule","RouterModule","MatCardModule","MatButtonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatOptionModule","MatSelectModule","MatProgressSpinnerModule","MatDialogModule","MatTableModule","MatCheckboxModule","MatRadioModule","MatTooltipModule","MatSlideToggleModule","routes","path","component","ServerCreateModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}