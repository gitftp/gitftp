{"version":3,"file":"src_app_deploy_deploy_module_ts.js","mappings":"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","sources":["./src/app/deploy/deploy.component.ts","./src/app/deploy/deploy.component.html","./src/app/deploy/deploy.module.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ProjectObject} from \"../project/project.component\";\nimport {HelperService} from \"../helper.service\";\nimport {ApiResponse, ApiService} from \"../api.service\";\nimport {ServerObject} from \"../project/servers/servers.component\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DeployModule} from \"./deploy.module\";\n\n@Component({\n  selector: 'app-deploy',\n  templateUrl: './deploy.component.html',\n  styleUrls: ['./deploy.component.scss']\n})\nexport class DeployComponent implements OnInit {\n  constructor(\n    private helper: HelperService,\n    private apiService: ApiService,\n    private fb: FormBuilder,\n    private activatedRoutes: ActivatedRoute,\n  ) {\n\n    this.form = this.fb.group({\n      'server_id': ['', [Validators.required]],\n      'type': ['', [Validators.required]],\n    });\n  }\n\n  form: FormGroup;\n\n  set setChildData(a: any) {\n    this.projectId = a.projectId;\n    this.project = a.project;\n    this.helper.setPage('project' + this.projectId + 'servers');\n\n    this.activatedRoutes.params.subscribe({\n      next: (a: any) => {\n        let id = this.helper.decode(a.id);\n        this.serverId = id;\n        this.form.get('server_id')?.setValue(parseInt(this.serverId));\n\n        // console.log('asd')\n        this.onChangeType();\n      }\n    });\n    this.getServers();\n  };\n\n  projectId: string = '';\n  project?: ProjectObject;\n\n  serverId: string = '';\n\n  servers: ServerObject[] = [];\n  gettingServers: boolean = false;\n\n  getServers() {\n    this.gettingServers = true;\n    this.apiService.post('servers/list', {\n      project_id: this.projectId\n    }).subscribe({\n      next: (res: ApiResponse) => {\n        // console.log(res);\n        this.gettingServers = false;\n        if (res.status) {\n          this.servers = res.data.servers;\n          console.log(this.servers, res);\n        } else {\n          this.helper.alertError(res);\n        }\n      },\n      error: err => {\n        this.gettingServers = false;\n        this.helper.alertError(err);\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.form.get('type')?.valueChanges.subscribe((a: any) => {\n      this.onChangeType();\n    });\n  }\n\n  type: string = '';\n\n  getSelectedBranch() {\n    let sid = this.form.get('server_id')?.value;\n    // console.log(sid)\n    let f: ServerObject | undefined;\n    for (let s of this.servers) {\n      if (s.server_id == sid) {\n        f = s;\n        break;\n      }\n    }\n    return f;\n  }\n\n  onChangeType(o: boolean = false) {\n    if (this.form.get('type')?.value == this.type && !o)\n      return;\n\n    if (this.form.get('type')?.value == 'fresh') {\n      this.getLatestCommit();\n    }\n    if (this.form.get('type')?.value == 'deploy') {\n\n    }\n    this.type = this.form.get('type')?.value;\n  }\n\n  latestCommits: CommitObject[] = [];\n  loadingLatestCommit: boolean = false;\n\n  getLatestCommit() {\n    this.loadingLatestCommit = true;\n    this.apiService.post('repo/git/commits', {\n      project_id: this.projectId,\n      branch: this.getSelectedBranch()?.branch,\n    })\n      .subscribe({\n        next: (res: ApiResponse) => {\n          this.loadingLatestCommit = false;\n          console.log(res);\n          if (res.status) {\n            this.latestCommits = res.data.commits;\n          } else {\n            this.helper.alertError(res.message);\n          }\n        }, error: err => {\n          this.loadingLatestCommit = false;\n          this.helper.alertError(err);\n        },\n      })\n  }\n\n  deploying: boolean = false;\n\n  public freshDeploy() {\n\n    this.deploying = true;\n    this.apiService.post('deploy', {\n      project_id: this.projectId,\n      server_id: this.serverId,\n      deploy_type: this.type,\n      revision: this.latestCommits[0].sha,\n    })\n      .subscribe({\n        next: (res: ApiResponse) => {\n          console.log(res);\n          this.deploying = false;\n          if (res.status) {\n\n          } else {\n            this.helper.alertError(res);\n          }\n        },\n        error: err => {\n          this.deploying = false;\n          this.helper.alertError(err);\n        }\n      })\n  }\n}\n\n\nexport interface CommitObject {\n  sha: string;\n  message: string;\n  author_avatar: string;\n  author: string;\n  time: string;\n}\n","<div class=\"page bootstrap-wrapper\">\n  <form [formGroup]=\"form\">\n\n    <div class=\"header\"\n         style=\"margin-bottom: 0\">\n      <h2>\n        Deploy to\n        <mat-form-field class=\"field-nude\"\n                        style=\"width: 500px;margin-left: -7px;\">\n          <mat-select formControlName=\"server_id\"\n                      (selectionChange)=\"onChangeType(true)\"\n                      placeholder=\"[select]\">\n            <mat-option *ngFor=\"let s of servers; let indx = index\"\n                        [value]=\"s.server_id\"\n            >\n              {{s.server_name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </h2>\n      <div style=\"display: block;\n    margin-top: -30px;\">\n        from\n        <ng-icon style=\"\n    font-size: 21px;\n    vertical-align: middle;\"\n                 name=\"ionGitBranch\"></ng-icon>\n        <strong>\n\n          {{getSelectedBranch()?.branch}}\n        </strong>\n      </div>\n      <div class=\"btns\">\n\n      </div>\n    </div>\n  </form>\n\n  <div style=\"margin-top: 10px\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <h3 class=\"no-m-t\">\n            <span>Deployment type</span>\n          </h3>\n\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-3\">\n          <form [formGroup]=\"form\">\n\n            <mat-chip-listbox aria-label=\"Fish selection\"\n                              formControlName=\"type\">\n              <mat-chip-option value=\"deploy\"\n                               [disabled]=\"form.get('type')?.value == 'deploy'\">Deploy\n              </mat-chip-option>\n              <mat-chip-option value=\"fresh\"\n                               [disabled]=\"form.get('type')?.value == 'fresh'\">Fresh upload\n              </mat-chip-option>\n            </mat-chip-listbox>\n          </form>\n\n          <!--          <mat-radio-group [(ngModel)]=\"type\"-->\n          <!--                           (change)=\"onChangeType()\">-->\n          <!--            <mat-radio-button style=\"margin-right: 20px;\"-->\n          <!--                              value=\"deploy\">Deploy-->\n          <!--            </mat-radio-button>-->\n          <!--            <mat-radio-button value=\"fresh\">Fresh</mat-radio-button>-->\n          <!--          </mat-radio-group>-->\n        </div>\n        <div class=\"col-12\">\n          <div class=\"row\"\n               *ngIf=\"form.value.type == 'fresh'\">\n            <div class=\"col-12\">\n              <p>\n                <mat-icon class=\"vm muted2\">info</mat-icon>\n                <span class=\"vm\">\n                  All project files will be uploaded to the server.\n                  Files will be updated if they already exists.\n                </span>\n              </p>\n            </div>\n            <div class=\"col-6\">\n              <mat-label>\n                Revision to be deployed\n              </mat-label>\n\n              <div style=\"padding: 20px 0;\"\n                   *ngIf=\"loadingLatestCommit\">\n                <mat-spinner diameter=\"30\"></mat-spinner>\n              </div>\n              <!--                  getting latest commit here. -->\n\n              <div class=\"commit\"\n                   *ngIf=\"latestCommits.length && !loadingLatestCommit\">\n                <div class=\"sha c\">\n                  {{latestCommits[0].sha | slice: 0: 8}}\n                </div>\n                <div class=\"m\">\n                  {{latestCommits[0].message}}\n\n                </div>\n                <div class=\"mc\">\n                  <img [src]=\"latestCommits[0].author_avatar\"\n                       alt=\"\">\n                  <span>\n                    {{latestCommits[0].author}}\n                  </span>\n                  <span style=\"color: #888;\">\n                    committed\n                    {{latestCommits[0].time | date: 'medium' | lowercase}}\n                  </span>\n                </div>\n\n              </div>\n\n\n              <button type=\"submit\"\n                      mat-flat-button\n                      btn-big\n                      (click)=\"freshDeploy()\"\n                      color=\"primary\">\n                Deploy\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div style=\"height: 200px;\"></div>\n{{form.value|json }}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeployComponent } from './deploy.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {NgIconComponent} from \"@ng-icons/core\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\n\n\nlet routes: Routes = [\n  {\n    path: '',\n    component: DeployComponent,\n  },\n  {\n    path: ':id',\n    component: DeployComponent,\n  }\n];\n\n@NgModule({\n  declarations: [\n    DeployComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatIconModule,\n    MatInputModule,\n    MatOptionModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatTooltipModule,\n    ReactiveFormsModule,\n    NgIconComponent,\n    MatProgressSpinnerModule,\n    MatCardModule,\n  ]\n})\nexport class DeployModule { }\n"],"names":["Validators","i0","DeployComponent","constructor","helper","apiService","fb","activatedRoutes","form","group","required","setChildData","a","projectId","project","setPage","params","subscribe","next","id","decode","serverId","get","setValue","parseInt","onChangeType","getServers","gettingServers","post","project_id","res","status","servers","data","console","log","alertError","error","err","ngOnInit","valueChanges","getSelectedBranch","sid","value","f","s","server_id","o","type","getLatestCommit","loadingLatestCommit","branch","latestCommits","commits","message","freshDeploy","deploying","deploy_type","revision","sha","selectors","decls","vars","consts","template","ctx","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","MatButtonModule","MatCheckboxModule","MatFormFieldModule","MatIconModule","MatInputModule","MatOptionModule","MatRadioModule","MatSelectModule","MatSlideToggleModule","MatTooltipModule","NgIconComponent","MatChipsModule","MatProgressSpinnerModule","MatCardModule","routes","path","component","DeployModule","forChild","declarations","imports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}