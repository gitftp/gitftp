{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/setup/setup.component.ts","./src/app/setup/setup.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ApiResponse, ApiService} from \"../api.service\";\nimport {HelperService, UserToken} from \"../helper.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss',\n    './../setup/setup.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    // private updateMi\n    private fb: FormBuilder,\n    private api:ApiService,\n    private helper: HelperService,\n    private router: Router,\n  ) {\n    this.form = this.fb.group({\n      'email': ['bonifacepereira@gmail.com', [Validators.required, Validators.email]],\n      'password': ['asdasdasd', [Validators.required]]\n    });\n    let user = this.helper.getUser();\n    if(user.token){\n      this.router.navigate(['/']);\n    }\n  }\n\n  form: FormGroup;\n\n  ngOnInit() {\n\n  }\n\n  submitting: boolean = false;\n  submit(){\n    if(this.form?.invalid){\n      this.form.markAllAsTouched();\n      return;\n    }\n\n    this.submitting = true;\n    this.api.post('auth/login', this.form?.value)\n      .subscribe({\n        next: (res: ApiResponse) => {\n          this.submitting = false;\n          console.log(res);\n          if(res.status){\n            let user: UserToken = res.data;\n            this.helper.setUser(user);\n            this.router.navigate(['home']);\n          }else{\n            this.helper.alert({\n              message: res.message,\n              exception: res.exception,\n            });\n          }\n        },\n        error: err => {\n          this.submitting = false;\n          this.helper.alert({\n            message: err,\n          })\n        },\n      })\n\n  }\n\n\n}\n\n\n","<div class=\"lc\">\n  <div class=\"l\">\n    <img src=\"assets/logo.png\"\n         class=\"logo\"\n         alt=\"\">\n    <!--    <mat-card>-->\n    <!--      <mat-card-content>-->\n\n    <h1 class=\"head-t\"\n        style=\"margin-top: 36px;\">Login</h1>\n    <p>\n      Please enter credentials to log into Gitftp\n    </p>\n\n    <!--      </mat-card-content>-->\n    <!--    </mat-card>-->\n  </div>\n\n  <div class=\"l\">\n    <!--    <h2>Create admin user</h2>-->\n    <!--    <p>-->\n    <!--      Please enter new credentials to log into Gitftp-->\n    <!--    </p>-->\n\n    <form\n      (submit)=\"submit()\"\n      [formGroup]=\"form\"\n      style=\"width: 500px;\">\n      <mat-form-field appearance=\"outline\"\n                      style=\"width: 300px\"\n                      class=\"mr2\">\n        <mat-label>Email</mat-label>\n        <input matInput\n               formControlName=\"email\">\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\"\n                      style=\"width: 300px\"\n                      class=\"mr2\">\n        <mat-label>Password</mat-label>\n        <input matInput\n               formControlName=\"password\">\n      </mat-form-field>\n\n      <div>\n\n        <button type=\"submit\"\n                color=\"primary\"\n                mat-flat-button>\n          Login\n        </button>\n      </div>\n    </form>\n  </div>\n\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {SetupComponent} from '../setup/setup.component';\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {MatFormField, MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\n\nlet routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'setup',\n    component: SetupComponent,\n  }\n]\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SetupComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatCardModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n  ]\n})\nexport class LoginModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HelperService} from \"../helper.service\";\nimport {ApiResponse, ApiService} from \"../api.service\";\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {LoginComponent} from \"../login/login.component\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-setup',\n  templateUrl: './setup.component.html',\n  styleUrls: ['./setup.component.scss']\n})\nexport class SetupComponent implements OnInit {\n  constructor(\n    private helper: HelperService,\n    private apiService: ApiService,\n    private fb: FormBuilder,\n    private router: Router,\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.depsCheck();\n    this.prepareDatabaseForm();\n    this.prepareUserForm();\n  }\n\n  dbForm!: FormGroup;\n\n  page: string = 'deps';\n\n  // page: string = 'user';\n\n  prepareDatabaseForm() {\n    this.dbForm = this.fb.group({\n      host: ['gfdatabase', [Validators.required]],\n      username: ['root', [Validators.required]],\n      password: ['root', []],\n      database: ['gf', [Validators.required]],\n      port: ['3306', [Validators.required]],\n      socket: ['', []],\n    });\n  }\n\n  userForm!: FormGroup;\n\n  prepareUserForm() {\n    this.userForm = this.fb.group({\n      'email': ['asd@asd.com', [Validators.email, Validators.required]],\n      'password': ['asdasdasd', [Validators.required, Validators.minLength(3)]],\n      'confirm_password': ['asdasdasd', [Validators.required, Validators.minLength(3)]],\n      public_domain: [window.location.origin, [Validators.required]],\n    });\n  }\n\n  setupLoading: boolean = false;\n  setupProgress: string = '';\n\n  setupSubmit() {\n    if (this.userForm.invalid) {\n      this.userForm.markAllAsTouched();\n      return;\n    }\n\n    let userValues = this.userForm.value;\n    if (userValues.password != userValues.confirm_password) {\n      this.helper.alert({\n        message: 'The password does not match, please try again',\n        type: 'error',\n      })\n      return;\n    }\n\n    this.setupProgress = 'Creating config file';\n    this.setupLoading = true;\n    this.userForm.disable();\n    this.apiService.post('auth/save-setup', {\n      user: this.userForm.value,\n      database: this.dbForm.value,\n    }).subscribe({\n      next: (res: ApiResponse) => {\n        if (res.status) {\n          // setup was saved\n          this.setupProgress = 'Running database Migrate';\n          this.apiService.post('auth/init-setup', {\n            user: this.userForm.value,\n          })\n            .subscribe({\n              next: (res: ApiResponse) => {\n                if (res.status) {\n                  this.setupProgress = 'Creating admin user';\n                  setTimeout(() => {\n                    this.router.navigate(['/']);\n                  }, 1000);\n                  this.setupLoading = false;\n                } else {\n                  this.userForm.enable();\n                  this.setupProgress = '';\n                  this.setupLoading = false;\n                  this.helper.alert({\n                    message: res.message,\n                    exception: res.exception,\n                    type: 'error',\n                  })\n                }\n              },\n              error: (err) => {\n                this.userForm.enable();\n                this.setupProgress = '';\n                this.setupLoading = false;\n                this.helper.alert({\n                  message: err,\n                  type: 'error',\n                })\n              }\n            })\n        } else {\n          this.userForm.enable();\n          this.setupProgress = '';\n          this.setupLoading = false;\n          this.helper.alert({\n            message: res.message,\n            exception: res.exception,\n            type: 'error'\n          });\n\n        }\n      },\n      error: (err) => {\n        this.userForm.enable();\n        this.setupProgress = '';\n        this.setupLoading = false;\n        this.helper.alert({\n          message: err,\n          type: 'error'\n        });\n      }\n    })\n  }\n\n\n  testingDbConnection: boolean = false;\n  dbError: string = '';\n\n  dbMsg: string = '';\n\n  testDbConnection() {\n    if (this.dbForm.invalid) {\n      this.dbForm?.markAllAsTouched();\n      return;\n    }\n    this.testingDbConnection = true;\n    this.dbError = '';\n    this.dbMsg = '';\n    this.apiService.post('auth/db-test', this.dbForm?.value)\n      .subscribe({\n        next: (res) => {\n          if (res.status) {\n            setTimeout(() => {\n              this.testingDbConnection = false;\n              this.page = 'user';\n            }, 1000);\n            this.dbMsg = 'Successfully connected to mysql server';\n            this.dbForm.disable();\n          } else {\n            this.testingDbConnection = false;\n            this.helper.alert({\n              message: res.message,\n              exception: res.exception,\n              type: 'error',\n            });\n          }\n        },\n        error: err => {\n          this.testingDbConnection = false;\n          this.helper.alert({\n            message: 'Network error',\n            type: 'error',\n          });\n        }\n      })\n  }\n\n  deps: any;\n\n  checkingDeps: boolean = false\n\n  depsCheck() {\n    this.checkingDeps = true;\n    this.apiService.post('auth/deps', {})\n      .subscribe({\n        next: (res) => {\n          this.checkingDeps = false;\n          if (res.status) {\n            this.deps = res.data;\n          }else{\n            this.helper.alert({\n              message: res.message,\n              type: 'Error',\n            });\n          }\n        },\n        error: (err) => {\n          this.checkingDeps = false;\n          this.helper.alert({\n            message: err,\n            type: 'error'\n          });\n        }\n      })\n  }\n\n}\n\nexport interface DepsResponse {\n  git?: string[];\n  php?: string[];\n  os?: string;\n  status?: boolean;\n}\n","<div class=\"lc\">\n  <div class=\"l\">\n    <img src=\"assets/logo.png\"\n         class=\"logo\"\n         alt=\"\">\n    <!--    <mat-card>-->\n    <!--      <mat-card-content>-->\n\n    <h1 class=\"head-t\">Welcome to Gitftp</h1>\n\n    <p>\n      no .env file is present, setup will continue.\n\n    </p>\n    <!--      </mat-card-content>-->\n    <!--    </mat-card>-->\n  </div>\n\n  <div class=\"l\"\n       *ngIf=\"page == 'deps'\">\n    <h2>Dependency Check</h2>\n    <p>\n      Checking if all the required dependencies are met.\n    </p>\n    <ul>\n      <li *ngIf=\"deps && deps.git\">\n        Git: {{deps.git[0]}} {{deps?.git[1]}}\n      </li>\n      <li *ngIf=\"deps && deps.php\">\n        Php: {{deps.php[0]}} {{deps?.php[1]}}\n      </li>\n      <li *ngIf=\"deps && deps.php\">\n        OS: {{deps.os}}\n      </li>\n      <li *ngIf=\"deps && deps.status\">\n        All OK 👍\n      </li>\n    </ul>\n\n    <button *ngIf=\"deps && deps.status\"\n            (click)=\"page = 'db'\"\n            type=\"button\"\n            color=\"primary\"\n            mat-flat-button>\n      Continue\n    </button>\n  </div>\n\n  <div class=\"l\"\n       *ngIf=\"deps && deps.status && page == 'db'\">\n    <h2>Setup MySQL database</h2>\n    <p>\n      Please enter the credentials for database where you want Gitftp schema to be installed.\n    </p>\n    <div style=\"height: 10px\"></div>\n\n    <form [formGroup]=\"dbForm\"\n          style=\"width: 500px;\"\n          (submit)=\"testDbConnection()\">\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Host</mat-label>\n        <input matInput\n               formControlName=\"host\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Database name</mat-label>\n        <input matInput\n               formControlName=\"database\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Username</mat-label>\n        <input matInput\n               formControlName=\"username\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Password</mat-label>\n        <input matInput\n               formControlName=\"password\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Port</mat-label>\n        <input matInput\n               formControlName=\"port\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Unix socket</mat-label>\n        <input matInput\n               formControlName=\"socket\">\n      </mat-form-field>\n      <div>\n        <p *ngIf=\"dbMsg\"\n           style=\"color: forestgreen;\n                  margin-top: 0;\n                  margin-bottom: 21px;\">\n          {{dbMsg}}\n        </p>\n        <button type=\"submit\"\n                color=\"primary\"\n                [disabled]=\"testingDbConnection\"\n                mat-flat-button>\n          Test<span *ngIf=\"testingDbConnection\">ing</span> connection\n        </button>\n      </div>\n    </form>\n  </div>\n\n\n  <div class=\"l\"\n       *ngIf=\"deps && deps.status && page == 'user'\">\n    <form [formGroup]=\"userForm\"\n          style=\"width: 500px;\"\n          (submit)=\"setupSubmit()\">\n      <h2>Create admin user</h2>\n      <p>\n        Please enter new credentials to log into Gitftp\n      </p>\n\n      <mat-form-field appearance=\"outline\"\n                      style=\"width: 300px\"\n                      class=\"mr2\">\n        <mat-label>Email</mat-label>\n        <input matInput\n               formControlName=\"email\">\n      </mat-form-field>\n      <br>\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Password</mat-label>\n        <input matInput\n               formControlName=\"password\">\n      </mat-form-field>\n      <mat-form-field appearance=\"outline\"\n                      class=\"mr2\">\n        <mat-label>Confirm password</mat-label>\n        <input matInput\n               formControlName=\"confirm_password\">\n      </mat-form-field>\n      <h2>Site</h2>\n      <mat-form-field appearance=\"outline\"\n                      style=\"width: 350px\"\n                      class=\"mr2\">\n        <mat-label>Public domain</mat-label>\n        <input matInput\n               formControlName=\"public_domain\">\n      </mat-form-field>\n\n      <div>\n        <p *ngIf=\"setupProgress\"\n           style=\"color: black;\n                  margin-top: 0;\n                  margin-bottom: 21px;\">\n          {{setupProgress}}...\n        </p>\n        <button type=\"submit\"\n                color=\"primary\"\n                [disabled]=\"setupLoading || userForm.invalid\"\n                mat-flat-button>\n          Start setup\n        </button>\n      </div>\n    </form>\n  </div>\n\n</div>\n"],"names":["Validators","LoginComponent","constructor","fb","api","helper","router","form","group","required","email","user","getUser","token","navigate","ngOnInit","submit","invalid","markAllAsTouched","submitting","post","value","subscribe","next","res","console","log","status","data","setUser","alert","message","exception","error","err","selectors","decls","vars","consts","template","i0","ctx","CommonModule","RouterModule","SetupComponent","MatButtonModule","MatIconModule","MatCardModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","routes","path","component","LoginModule","forChild","declarations","imports","apiService","depsCheck","prepareDatabaseForm","prepareUserForm","dbForm","host","username","password","database","port","socket","userForm","minLength","public_domain","window","location","origin","setupSubmit","userValues","confirm_password","type","setupProgress","setupLoading","disable","setTimeout","enable","testDbConnection","testingDbConnection","dbError","dbMsg","page","checkingDeps","deps"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}