{"version":3,"file":"src_app_project_main_main_module_ts.js","mappings":"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","sources":["./src/app/project/main/main.component.html","./src/app/project/main/main.component.ts","./src/app/project/main/main.module.ts","./src/app/repo.service.ts"],"sourcesContent":["<!--<div class=\"table2\">-->\n<!--  main-->\n<!--  {{project | json}}-->\n<!--</div>-->\n<div class=\"page\">\n\n  <div *ngIf=\"project?.clone_state != 'cloned'\"\n       style=\"padding: 30px 0;border-top: solid 1px #ddd\">\n\n    <h2>\n      <mat-icon\n        class=\"vm\"\n        style=\"font-size: 50px;\n              height: auto;\n              width: auto;\n          }\">\n        filter_hdr\n      </mat-icon>\n<!--        blur_on-->\n      <span class=\"vm m-l-10\">\n        Get started\n      </span>\n    </h2>\n\n    <p>\n      Gitftp will clone the project on this machine\n      <br>\n      Project will be cloned at <code>&lt;gitftp installation dir&gt;/storage/{{project?.clone_dir}}</code>\n    </p>\n\n<!--\nthinking of a UI\n1. setup web hooks\n2.\n\n\n-->\n\n    <button type=\"button\" mat-flat-button btn-big=\"\" color=\"primary\" (click)=\"clone()\">\n      Start clone\n    </button>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AppEvent, HelperService} from \"../../helper.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ApiResponse, ApiService} from \"../../api.service\";\nimport {ProjectObject} from \"../project.component\";\nimport {RepoService} from \"../../repo.service\";\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n  constructor(\n    private apiService: ApiService,\n    private helper: HelperService,\n    private activatedRoute: ActivatedRoute,\n    private repo: RepoService,\n  ) {\n\n  }\n\n  set setChildData(a: any) {\n    this.projectId = a.projectId;\n    this.project = a.project;\n    this.helper.setPage('project' + this.projectId);\n  };\n\n  projectId: string = '';\n  project?: ProjectObject;\n\n  ngOnInit() {\n    // this.helper.appEvents.subscribe((e: AppEvent) => {\n    //   if (e.name == 'projectLoad') {\n    //     this.project = e.data.project;\n    //     this.projectId = e.data.projectId;\n    //     console.log('load main')\n    //   }\n    // });\n  }\n\n  clone() {\n    this.repo.requestDeploy({\n      projectId: this.projectId,\n      type: 'clone',\n    })\n      .subscribe({\n        next: (res: ApiResponse) => {\n          console.log(res)\n        },\n        error: err => {\n          console.log(err)\n        },\n      })\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MainComponent} from './main.component';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatOptionModule} from \"@angular/material/core\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatProgressSpinnerModule} from \"@angular/material/progress-spinner\";\nimport {MatDialogModule} from \"@angular/material/dialog\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {ServersComponent} from \"../servers/servers.component\";\nimport {ProjectComponent} from \"../project.component\";\n\n\nlet routes: Routes = [\n  {\n    path: '',\n    component: MainComponent,\n  },\n  {\n    path: 'servers',\n    loadChildren: () => {\n      return import('./../servers/servers.module').then((a) => {\n        return a.ServersModule;\n      });\n    }\n  },\n  {\n    path: 'settings',\n    loadChildren: () => {\n      return import('./../settings/settings.module').then((a) => {\n        return a.SettingsModule;\n      });\n    }\n  },\n  {\n    path: 'server',\n    loadChildren: () => {\n      return import('./../servers/server-create/server-create.module').then((a) => {\n        return a.ServerCreateModule;\n      });\n    }\n  },\n  {\n    path: 'deploy',\n    loadChildren: () => {\n      return import('../../deploy/deploy.module').then((a) => {\n        return a.DeployModule;\n      });\n    }\n  },\n];\n\n\n@NgModule({\n  declarations: [\n    MainComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    MatCardModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTableModule,\n  ]\n})\nexport class MainModule {\n}\n","import {Injectable, OnInit} from '@angular/core';\nimport {ApiService} from \"./api.service\";\nimport {HelperService} from \"./helper.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RepoService {\n\n  constructor(\n    private api: ApiService,\n    private helper: HelperService,\n  ) {\n\n  }\n\n  requestDeploy(options: {\n    projectId: any,\n    serverId?: any,\n    type: any,\n    revision?: any,\n  }) {\n    return this.api.post('add-deploy-request', {\n      project_id: options.projectId,\n      server_id: options.serverId,\n      type: options.type,\n      revision: options.revision,\n    });\n  }\n\n}\n"],"names":["i0","MainComponent","constructor","apiService","helper","activatedRoute","repo","setChildData","a","projectId","project","setPage","ngOnInit","clone","requestDeploy","type","subscribe","next","res","console","log","error","err","selectors","decls","vars","consts","template","CommonModule","RouterModule","MatCardModule","MatButtonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatOptionModule","MatSelectModule","MatProgressSpinnerModule","MatDialogModule","MatTableModule","routes","path","component","loadChildren","then","ServersModule","SettingsModule","ServerCreateModule","DeployModule","MainModule","forChild","declarations","imports","RepoService","api","options","post","project_id","server_id","serverId","revision","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}